<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>isthis&apos;s blog</title>
    <description>이슈, 공부한 내용을 정리하는 블로그입니다.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 16 Jan 2023 20:03:39 +0900</pubDate>
    <lastBuildDate>Mon, 16 Jan 2023 20:03:39 +0900</lastBuildDate>
    <generator>Jekyll v4.3.1</generator>
    
      <item>
        <title>[mysql] MySQL id컬럼의 data type (INT vs BIGINT)</title>
        <description>&lt;p&gt;MySQL id컬럼의 data type에 대하여&lt;/p&gt;

&lt;h2 id=&quot;1-상황&quot;&gt;1. 상황&lt;/h2&gt;

&lt;p&gt;&lt;span class=&quot;spoiler&quot;&gt;
ID컬럼이 INT 타입인 DB에 맞춰 typescript로 개발한 app이 있는데, BIGINT 타입으로 변경했더니 많은 에러가 발생함.\
(변경 이유는 생략)
&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-원인&quot;&gt;2. 원인&lt;/h2&gt;

&lt;p&gt;BIGINT는 INT와 달리 Number type이 아닌 별도의 타입(bigint)을 사용함.&lt;br /&gt;
전부 Number type으로 개발되어 있고, 비지니스 로직에서 계속해서 분리하여 사용해야 하는 번거로움이 발생&lt;br /&gt;
따라서, BIGINT가 아닌 INT를 사용하여 번거로움을 줄이고자 INT와 BIGINT의 차이를 확인함.&lt;/p&gt;

&lt;h2 id=&quot;3-개념&quot;&gt;3. 개념&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;INT / BIGINT 특징&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Maximum Value Signed&lt;/th&gt;
      &lt;th&gt;Minimum Value Signed&lt;/th&gt;
      &lt;th&gt;Maximum Value Unsigned&lt;/th&gt;
      &lt;th&gt;Minimum Value Unsigned&lt;/th&gt;
      &lt;th&gt;Storage(Bytes)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;INT&lt;/td&gt;
      &lt;td&gt;2,147,483,647 (약 21억)&lt;/td&gt;
      &lt;td&gt;-2,147,483,648 (약 -21억)&lt;/td&gt;
      &lt;td&gt;4,294,967,295 (약 43억)&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BIGINT&lt;/td&gt;
      &lt;td&gt;약 922경&lt;/td&gt;
      &lt;td&gt;약 -922경&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;약 1,844경&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;(INT, BIGINT 외의 타입에 대한 특징은 맨 아래 참고 사이트 참고)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;id 컬럼에 적용 시 고려할 사항
    &lt;ul&gt;
      &lt;li&gt;BIGINT 사용 시, TypeScript에서 Number Type이 아닌, BIGINT Type을 사용해야 함.
        &lt;ul&gt;
          &lt;li&gt;비지니스 로직에서 Number와 BIGINT 타입으로 분리하여 사용해야 하는 번거로움 발생&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;id 값이 43억을 넘어가는 아주 큰 DB라면 무조건 BIGINT를 사용&lt;/li&gt;
      &lt;li&gt;43억이 넘지 않다면, 가능한 작은 타입을 선택하는 것이 속도 측면에서 조금 더 유리해 보임&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-정리&quot;&gt;4. 정리&lt;/h2&gt;

&lt;p&gt;컬럼 수가 43억개 이상 넘어갈 정도로 큰 서비스 규모가 아니고, 속도 차이와 type 지정의 번거로움을 줄이기 위해 INT 데이터타입을 사용하기로 하였다.&lt;/p&gt;

&lt;p&gt;피드백 환영합니다 :)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고자료&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/integer-types.html&quot;&gt;MySQL 공식문서&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Wed, 04 Jan 2023 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/mysql-id-column/</link>
        <guid isPermaLink="true">http://localhost:4000/mysql-id-column/</guid>
        
        <category>mysql</category>
        
        <category>db</category>
        
        
        <category>issue</category>
        
        <category>db</category>
        
      </item>
    
      <item>
        <title>[Git] git the requested URL returend error : 403 해결</title>
        <description>&lt;h1 id=&quot;git-git-the-requested-url-returend-error--403-해결&quot;&gt;[git] git the requested URL returend error : 403 해결&lt;/h1&gt;

&lt;h2 id=&quot;1-상황&quot;&gt;1. 상황&lt;/h2&gt;

&lt;p&gt;새로운 Git Repository 생성하고 다음과 같은 가이드에 따라 소스코드 푸쉬하는 도중 발생.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;echo &quot;# -&quot; &amp;gt;&amp;gt; README.md
git init
git add README.md
git commit -m &quot;first commit&quot;
git branch -M main
git remote add origin https://github.com/IsthisLee/-.git
git push -u origin main
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;git push -u origin main 시, 403 에러가 발생함.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Unable to access &apos;https://github.com/github_id/git_reposit_name.git&apos;/ The requested URL returned error: 403&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;위 문구 발생.&lt;/p&gt;

&lt;h2 id=&quot;2-원인&quot;&gt;2. 원인&lt;/h2&gt;

&lt;p&gt;원격 저장소에 권한이 없어서 접근을 못함. 따라서 소스 코드를 푸쉬할 수 없다.&lt;/p&gt;

&lt;h2 id=&quot;3-방안&quot;&gt;3. 방안&lt;/h2&gt;

&lt;p&gt;인증을 통하여 해결&lt;/p&gt;

&lt;h4 id=&quot;31-인증&quot;&gt;3.1. 인증&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git remote set-url origin https://github-username@github.com/github-username/github-repository-name.git&lt;/code&gt; 입력&lt;/li&gt;
  &lt;li&gt;처음에 git remote add origin git&lt;em&gt;reposit&lt;/em&gt;주소.git 을 통해 origin 명칭을 만들었지만, 해당 주소에 대한 권한이 없어서 푸쉬를 할 때 에러가 발생한 것.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;32-소스코드-푸시&quot;&gt;3.2. 소스코드 푸시&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;터미널에 git push -u origin master 입력&lt;/li&gt;
  &lt;li&gt;깃헙 패스워드 입력을 하라는 창이 나오고 입력 시 정상 푸시됨.&lt;/li&gt;
  &lt;li&gt;최초 인증 이후부터는 git push만 하면 기존의 세팅한 주소로 바로 푸시됨.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-정리&quot;&gt;4. 정리&lt;/h2&gt;

&lt;h2 id=&quot;5-개념&quot;&gt;5. 개념&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;참고 사이트:
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고자료&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://beagle-dev.tistory.com/244&quot;&gt;언젠간 되어있겠지&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 13 Nov 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/git-the-requested-url-returned-error-403/</link>
        <guid isPermaLink="true">http://localhost:4000/git-the-requested-url-returned-error-403/</guid>
        
        <category>git</category>
        
        
        <category>issue</category>
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>[Prisma] prisma soft delete 적용하기</title>
        <description>&lt;p&gt;prisma soft delete 적용하기&lt;/p&gt;

&lt;h1 id=&quot;prisma-soft-delete-적용&quot;&gt;[prisma] soft delete 적용&lt;/h1&gt;

&lt;h2 id=&quot;1-상황-및-원인&quot;&gt;1. 상황 및 원인&lt;/h2&gt;

&lt;p&gt;Prisma를 사용하여 백엔드 서버를 마이그레이션 중이다.&lt;br /&gt;
기존에 사용하던 ORM인 sequielize에는 delete 관련 Column이 있을 경우, sequelize 설정으로 간단하게 soft delete를 적용시킬 수 있었다.(typeORM도 된다.)&lt;br /&gt;
그러나, Prisma에는 그런 기능이 없다.(이외에도 자잘하게 아쉬운 부분들이 꽤 있다..)&lt;/p&gt;

&lt;h3 id=&quot;그럼에도-prisma를-사용하고-있는-이유&quot;&gt;그럼에도 Prisma를 사용하고 있는 이유&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Node.js 와 TypeScript 를 위한 Auto-generated &amp;amp; Type-safe 한 Querybuilder 제공&lt;br /&gt;
1-1. prisma client 생성 시, model에 대한 schema와 type들을 완벽하게 인식하여 type 안정성이 높음&lt;br /&gt;
1-2. 기존 DB를 사용하기 위한 간편한 Introspect 기능 제공&lt;br /&gt;
1-3. prisma generate로 model 선언 불필요&lt;/li&gt;
  &lt;li&gt;여러 개의 prisma client를 활용하여 다수의 DB 작업 가능&lt;/li&gt;
  &lt;li&gt;GUI Database Tool(Prisma Studio) 제공&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;(자세한 이유와 Prisma에 관한 내용은 다음에..)&lt;/p&gt;

&lt;h3 id=&quot;prisma-soft-delete-적용-이유&quot;&gt;Prisma Soft Delete 적용 이유&lt;/h3&gt;

&lt;p&gt;prisma는 soft delete를 지원하지 않으나, 우리 서비스에서는 soft delete를 적용하고 있으므로 사용해야 했다.&lt;br /&gt;
soft delete의 세부 동작은 삭제 동작 시, delete 관련 coulmn을 update하는 방식이다.&lt;br /&gt;
따라서, 비지니스 로직 중 삭제 로직은 delete column을 update하는 방식으로 구현하고 있었다.&lt;br /&gt;
이런 방식의 문제는 다음과 같다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;삭제 행위임에도 prisma opretaion은 update라는 mismatch 현상&lt;/li&gt;
  &lt;li&gt;data model의 delete column의 유무에 따라 operation이 달라짐&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;따라서, delete column이 존재할 경우, 자동으로 delete column을 update하도록 middleware를 적용시켰다.&lt;/p&gt;

&lt;h2 id=&quot;2-방안&quot;&gt;2. 방안&lt;/h2&gt;

&lt;h3 id=&quot;2-1-prisma-middleware-구현&quot;&gt;2-1. prisma Middleware 구현&lt;/h3&gt;

&lt;p&gt;다음과 같이 코드를 구현하였다.&lt;/p&gt;

&lt;div class=&quot;language-typescript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prismaClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Prisma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ScalarFieldEnum`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;deletedAt&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;koNow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dayjs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;utc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;hour&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;deletedAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;koNow&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;deleteMany&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;updateMany&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;deletedAt&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;koNow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;deletedAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;koNow&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2L 에서 prisma 동작 대상 model에 deletedAt이라는 column이 포함되어 있는 경우를 확인하고, delete와 deleteMany operation을 update, updateMany로 변경시켜준다.&lt;/p&gt;

&lt;h3 id=&quot;2-2-위-방식의-문제점&quot;&gt;2-2. 위 방식의 문제점&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;prisma operation으로 hard delete(DB row 제거)가 불가능하다.&lt;/li&gt;
  &lt;li&gt;soft deleted된 data를 다시 soft delete하여도 error가 발생하지 않는다.(deletedAt coulmn을 update하는 행위이므로)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;1번은 raw query를 작성하여 해결하고,&lt;br /&gt;
2번은 soft delete 전에 해당 data가 soft deleted 되었는지 확인 후 실행하도록 로직을 구성해야 한다.&lt;/p&gt;

&lt;p&gt;2번의 경우, 미들웨어를 사용하지 않더라도 발생하는 문제이기에 위 방식만의 문제라고는 볼 수 없다.&lt;/p&gt;

&lt;h3 id=&quot;3-정리&quot;&gt;3. 정리&lt;/h3&gt;

&lt;p&gt;1번 문제의 경우를 잘 생각하여 미들웨어를 통해 자동으로 변환할지 잘 판단하여 적용해야 할 것 같다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고자료&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://www.prisma.io/docs/&quot;&gt;프리즈마 공식문서&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.prisma.io/docs/concepts/components/prisma-client/middleware/soft-delete-middleware&quot;&gt;프리즈마 공식문서 - soft-delete-middleware&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://wwlee94.github.io/category/blog/performance-comparison-prisma-typeorm/#prisma-%EC%99%80-typeorm-%EC%84%B1%EB%8A%A5-%EB%B9%84%EA%B5%90&quot;&gt;Blausee blog&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Thu, 27 Oct 2022 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/prisma-soft-delete/</link>
        <guid isPermaLink="true">http://localhost:4000/prisma-soft-delete/</guid>
        
        <category>orm</category>
        
        <category>prisma</category>
        
        <category>db</category>
        
        
        <category>issue</category>
        
        <category>prisma</category>
        
      </item>
    
  </channel>
</rss>
