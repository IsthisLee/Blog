<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>isthis&apos;s blog</title>
    <description>이슈, 공부한 내용을 정리하는 블로그입니다.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 16 Jan 2023 17:22:11 +0900</pubDate>
    <lastBuildDate>Mon, 16 Jan 2023 17:22:11 +0900</lastBuildDate>
    <generator>Jekyll v4.3.1</generator>
    
      <item>
        <title>[mysql] MySQL id컬럼의 data type (INT vs BIGINT)</title>
        <description>&lt;p&gt;MySQL id컬럼의 data type에 대하여&lt;/p&gt;

&lt;h2 id=&quot;1-상황&quot;&gt;1. 상황&lt;/h2&gt;

&lt;p&gt;&lt;span class=&quot;spoiler&quot;&gt;
ID컬럼이 INT 타입인 DB에 맞춰 typescript로 개발한 app이 있는데, BIGINT 타입으로 변경했더니 많은 에러가 발생함.\
(변경 이유는 생략)
&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-원인&quot;&gt;2. 원인&lt;/h2&gt;

&lt;p&gt;BIGINT는 INT와 달리 Number type이 아닌 별도의 타입(bigint)을 사용함.&lt;br /&gt;
전부 Number type으로 개발되어 있고, 비지니스 로직에서 계속해서 분리하여 사용해야 하는 번거로움이 발생&lt;br /&gt;
따라서, BIGINT가 아닌 INT를 사용하여 번거로움을 줄이고자 INT와 BIGINT의 차이를 확인함.&lt;/p&gt;

&lt;h2 id=&quot;3-개념&quot;&gt;3. 개념&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;INT / BIGINT 특징&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;Type&lt;/th&gt;
          &lt;th&gt;Maximum Value Signed&lt;/th&gt;
          &lt;th&gt;Minimum Value Signed&lt;/th&gt;
          &lt;th&gt;Maximum Value Unsigned&lt;/th&gt;
          &lt;th&gt;Minimum Value Unsigned&lt;/th&gt;
          &lt;th&gt;Storage(Bytes)&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;INT&lt;/td&gt;
          &lt;td&gt;2147483647 (약 21억)&lt;/td&gt;
          &lt;td&gt;-2147483648 (약 -21억)&lt;/td&gt;
          &lt;td&gt;4294967295 (약 43억)&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;4&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;BIGINT&lt;/td&gt;
          &lt;td&gt;약 922경&lt;/td&gt;
          &lt;td&gt;약 -922경&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;약 1844경&lt;/td&gt;
          &lt;td&gt;8&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;

    &lt;p&gt;(INT, BIGINT 외의 타입에 대한 특징은 맨 아래 참고 사이트 참고)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;id 컬럼에 적용 시 고려할 사항&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;BIGINT 사용 시, TypeScript에서 Number Type이 아닌, BIGINT Type을 사용해야 함.
        &lt;ul&gt;
          &lt;li&gt;비지니스 로직에서 Number와 BIGINT 타입으로 분리하여 사용해야 하는 번거로움 발생&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;id 값이 43억을 넘어가는 아주 큰 DB라면 무조건 BIGINT를 사용&lt;/li&gt;
      &lt;li&gt;43억이 넘지 않다면, 가능한 작은 타입을 선택하는 것이 속도 측면에서 조금 더 유리해 보임&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-정리&quot;&gt;4. 정리&lt;/h2&gt;

&lt;p&gt;컬럼 수가 43억개 이상 넘어갈 정도로 큰 서비스 규모가 아니고, 속도 차이와 type 지정의 번거로움을 줄이기 위해 INT 데이터타입을 사용하기로 하였다.&lt;/p&gt;

&lt;p&gt;피드백 환영합니다 :)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고자료&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://dev.mysql.com/doc/refman/8.0/en/integer-types.html&quot;&gt;MySQL 공식문서&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Wed, 04 Jan 2023 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/mysql-id-column/</link>
        <guid isPermaLink="true">http://localhost:4000/mysql-id-column/</guid>
        
        <category>mysql</category>
        
        <category>db</category>
        
        
        <category>db</category>
        
      </item>
    
  </channel>
</rss>
